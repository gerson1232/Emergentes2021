{"ast":null,"code":"import connectDB from '../../../utils/connectDB';\nimport Users from '../../../models/userModel';\nimport auth from '../../../middleware/auth';\nimport bcrypt from 'bcrypt';\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"PATCH\":\n      await resetPassword(req, res);\n      break;\n  }\n});\n\nconst resetPassword = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    const {\n      password\n    } = req.body;\n    const passwordHash = await bcrypt.hash(password, 12);\n    await Users.findOneAndUpdate({\n      _id: result.id\n    }, {\n      password: passwordHash\n    });\n    res.json({\n      msg: \"Update Success!\"\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/Nueva carpeta (4)/nextjs-ecommerce-master/pages/api/user/resetPassword.js"],"names":["connectDB","Users","auth","bcrypt","req","res","method","resetPassword","result","password","body","passwordHash","hash","findOneAndUpdate","_id","id","json","msg","err","status","message"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEAH,SAAS;AAET,gBAAe,OAAOI,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,UAAOD,GAAG,CAACE,MAAX;AACI,SAAK,OAAL;AACI,YAAMC,aAAa,CAACH,GAAD,EAAMC,GAAN,CAAnB;AACA;AAHR;AAKH,CAND;;AASA,MAAME,aAAa,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACtC,MAAI;AACA,UAAMG,MAAM,GAAG,MAAMN,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAzB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAeL,GAAG,CAACM,IAAzB;AACA,UAAMC,YAAY,GAAG,MAAMR,MAAM,CAACS,IAAP,CAAYH,QAAZ,EAAsB,EAAtB,CAA3B;AAEA,UAAMR,KAAK,CAACY,gBAAN,CAAuB;AAACC,MAAAA,GAAG,EAAEN,MAAM,CAACO;AAAb,KAAvB,EAAyC;AAACN,MAAAA,QAAQ,EAAEE;AAAX,KAAzC,CAAN;AAEAN,IAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAT;AAEH,GATD,CASE,OAAOC,GAAP,EAAY;AACV,WAAOb,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAACE,MAAAA,GAAG,EAAEA,GAAG,CAACE;AAAV,KAArB,CAAP;AACH;AACJ,CAbD","sourcesContent":["import connectDB from '../../../utils/connectDB'\nimport Users from '../../../models/userModel'\nimport auth from '../../../middleware/auth'\nimport bcrypt from 'bcrypt'\n\nconnectDB()\n\nexport default async (req, res) => {\n    switch(req.method){\n        case \"PATCH\":\n            await resetPassword(req, res)\n            break;\n    }\n}\n\n\nconst resetPassword = async (req, res) => {\n    try {\n        const result = await auth(req, res)\n        const { password } = req.body\n        const passwordHash = await bcrypt.hash(password, 12)\n\n        await Users.findOneAndUpdate({_id: result.id}, {password: passwordHash})\n\n        res.json({ msg: \"Update Success!\"})\n        \n    } catch (err) {\n        return res.status(500).json({err: err.message})\n    }   \n}"]},"metadata":{},"sourceType":"module"}